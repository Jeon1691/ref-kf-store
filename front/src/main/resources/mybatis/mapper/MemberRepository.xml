<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kakaofriends.front.repository.MemberRepository">

	<select id="selectMemberAddress" parameterType="int" resultType="com.kakaofriends.front.domain.MemberAddress">
		SELECT ID, NAME, ADDR1, ADDR2, ADDR3, ZONECODE, PHONE, EMAIL, COUNTRYCODE
		FROM KFO_MEMBER_ADDRESS
		WHERE USERID = #{userId}
	</select>

    <select id="selectMemberAddressCount" parameterType="int" resultType="int">
        SELECT COUNT(ID)
        FROM KFO_MEMBER_ADDRESS
        WHERE USERID = #{userId}
    </select>

	<insert id="insertMemberLogin" parameterType="com.kakaofriends.core.domain.MemberLogin">
		INSERT INTO MEMBERLOGIN
		(
		MBL_SEQ,
		MBL_MBID,
		MBL_ETC1,
		MBL_ETC2,
		MBL_ETC3,
		MBL_STATUS,
		MBL_TYPE,
		MBL_USE,
		MBL_INID,
		MBL_INDATE
		) VALUES (
		USQ_MEMBERLOGIN.nextval,
		#{mblMbId, jdbcType=VARCHAR},
		#{mblEtc1, jdbcType=VARCHAR},
		#{mblEtc2, jdbcType=VARCHAR},
		#{mblEtc3, jdbcType=VARCHAR},
		#{mblStatus, jdbcType=VARCHAR},
		#{mblType, jdbcType=VARCHAR},
		#{mblUse, jdbcType=VARCHAR},
		#{mblInId, jdbcType=VARCHAR},
		SYSDATE
		)
	</insert>

	<!-- BREEZE -->
	<!-- INSERT -->
	<insert id="insert" parameterType="com.kakaofriends.front.domain.Member">
		INSERT INTO KFO_MEMBER (
		ID,
		STATUS,
		EMAIL,
		PASSWORD,
		NAME,
		PHONE_NUMBER,
		BIRTHYEAR,
		BIRTHDAY,
		GENDER,
		COUNTRY,
		PROVIDER_ID,
		PROVIDER_USER_ID,
		BARCODE,
		BARCODE_URL,
		PHONE_AUTH
		) VALUES (
		SEQ_MEMBER_ID.nextval,
		#{status, jdbcType=VARCHAR},
		#{email, jdbcType=VARCHAR},
		#{password, jdbcType=VARCHAR},
		#{name, jdbcType=VARCHAR},
		#{phoneNumber, jdbcType=VARCHAR},
		#{birthyear, jdbcType=VARCHAR},
		#{birthday, jdbcType=VARCHAR},
		#{gender, jdbcType=VARCHAR},
		#{country, jdbcType=VARCHAR},
		#{providerId, jdbcType=VARCHAR},
		#{providerUserId, jdbcType=VARCHAR},
		#{barcode, jdbcType=VARCHAR},
		#{barcodeUrl, jdbcType=VARCHAR},
		#{phoneAuth, jdbcType=VARCHAR}
		)
		<selectKey keyProperty="id" resultType="Long" order="AFTER"> SELECT SEQ_MEMBER_ID.currval FROM dual </selectKey>
	</insert>

	<!-- GET -->
	<select id="get" parameterType="com.kakaofriends.front.domain.Member" resultType="com.kakaofriends.front.domain.Member">
		SELECT
		       ID,
		       STATUS,
		       EMAIL,
		       NAME,
		       PHONE_NUMBER as phoneNumber,
		       BIRTHYEAR,
		       BIRTHDAY,
		       GENDER,
		       COUNTRY,
		       PASSWORD,
		       PROVIDER_ID AS providerId,
		       PROVIDER_USER_ID AS providerUserId,
               BARCODE as barcode
		FROM KFO_MEMBER
		<where>
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="email != null">
				AND email = #{email}
			</if>
			<if test="phoneNumber != null">
				AND phone_number = #{phoneNumber}
			</if>
			<if test="name != null">
				AND name = #{name}
			</if>
			<if test="status != null">
				AND status = #{status}
			</if>
            <if test="providerUserId != null">
                AND provider_user_id = #{providerUserId}
            </if>
		</where>
	</select>

    <select id="findByProviderUserId" parameterType="map" resultType="com.kakaofriends.front.domain.Member">
        SELECT
        ID,
        STATUS,
        EMAIL,
        NAME,
        PHONE_NUMBER as phoneNumber,
        BIRTHYEAR,
        BIRTHDAY,
        GENDER,
        COUNTRY,
        PASSWORD,
        PROVIDER_ID AS providerId,
        PROVIDER_USER_ID AS providerUserId,
        BARCODE
        FROM KFO_MEMBER
        <where>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="providerUserId != null">
                AND provider_user_id = #{providerUserId}
            </if>
        </where>
        ORDER BY ID DESC
    </select>

    <select id="findAllByProviderUserId" parameterType="map" resultType="com.kakaofriends.front.domain.Member">
        SELECT
        ID,
        STATUS,
        EMAIL,
        NAME,
        PHONE_NUMBER as phoneNumber,
        BIRTHYEAR,
        BIRTHDAY,
        GENDER,
        COUNTRY,
        PASSWORD,
        PROVIDER_ID AS providerId,
        PROVIDER_USER_ID AS providerUserId,
        PASSWORD_DATE AS passwordDate,
        UPDATE_DATE AS updateDate,
        CREATE_DATE AS createDate
        FROM KFO_MEMBER
        <where>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="providerUserId != null">
                AND provider_user_id = #{providerUserId}
            </if>
        </where>
        ORDER BY ID DESC
    </select>

	<update id="update" parameterType="com.kakaofriends.front.domain.Member" >
		UPDATE kfo_member
		<set>
			update_date = SYSDATE,
			<if test="status != null">
				status = #{status},
			</if>
			<if test="email != null">
				email = #{email},
			</if>
			<if test="password != null">
				password = #{password},
				password_date = SYSDATE,
			</if>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="phoneNumber != null">
				phone_number = #{phoneNumber},
			</if>
			<if test="birthyear != null">
				birthyear = #{birthyear},
			</if>
			<if test="birthday != null">
				birthday = #{birthday},
			</if>
			<if test="gender != null">
				gender = #{gender},
			</if>
			<if test="country != null">
				country = #{country},
			</if>
			<if test="phoneAuth != null">
				phone_auth = #{phoneAuth},
			</if>
			<if test="emailAuth != null">
				email_auth = #{emailAuth},
			</if>
		</set>
		WHERE id = #{id}
	</update>

	<update id="updateUserConnection" parameterType="com.kakaofriends.front.domain.Member">
		UPDATE userconnection
		SET userid = #{email}
		WHERE userid = #{oldEmail}
	</update>

	<update id="updateDefaultAddress" parameterType="com.kakaofriends.front.domain.MemberAddress">
		UPDATE KFO_MEMBER_ADDRESS
		SET NAME = #{name}, ADDR1 = #{addr1}, ADDR2 = #{addr2}, ADDR3 = #{addr3}, ZONECODE = #{zoneCode}, PHONE = #{phone}, EMAIL = #{email},
		COUNTRYCODE = #{countryCode},
		UPD_USER = #{userId}, UPD_DTTM = SYSDATE
		WHERE  USERID = #{userId}
	</update>

	<delete id="deleteUserConnection" parameterType="com.kakaofriends.front.domain.Member" >
		DELETE FROM userconnection
		WHERE userid = #{email}
	</delete>

	<insert id="insertDefaultAddress" parameterType="com.kakaofriends.front.domain.MemberAddress">
		INSERT INTO KFO_MEMBER_ADDRESS
		(ID, USERID, NAME, ADDR1, ADDR2, ADDR3, ZONECODE, PHONE, EMAIL, COUNTRYCODE, UPD_USER, REG_USER, UPD_DTTM, REG_DTTM)
		VALUES (
		SEQ_MEMBERADDRESS_ID.nextval,
		#{userId, jdbcType=NUMERIC},
		#{name, jdbcType=VARCHAR},
		#{addr1, jdbcType=VARCHAR},
		#{addr2, jdbcType=VARCHAR},
		#{addr3, jdbcType=VARCHAR},
		#{zoneCode, jdbcType=VARCHAR},
		#{phone, jdbcType=VARCHAR},
		#{email, jdbcType=VARCHAR},
		#{countryCode, jdbcType=VARCHAR},
		#{updUser, jdbcType=VARCHAR},
		#{regUser, jdbcType=VARCHAR},
		SYSDATE,
		SYSDATE
		)
	</insert>

    <delete id="deleteDefaultAddress" parameterType="int">
        DELETE FROM KFO_MEMBER_ADDRESS
        WHERE USERID = #{userId}
    </delete>
</mapper>
